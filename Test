-- âœ… FULL-FEATURED CUSTOM UI LIBRARY WITH GRADIENT, TOGGLES, DROPDOWNS, HOTKEYS, CONFIG STORAGE
-- Based on your original design, with all key features added for a script-hub-level experience

local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local HttpService = game:GetService("HttpService")

local LocalPlayer = Players.LocalPlayer
local PlayerGui = LocalPlayer:WaitForChild("PlayerGui")

local CONFIG_KEY = "MyUI_Config"

-- ðŸŽ¨ Theme & Gradient
local THEME = {
    Background = Color3.fromRGB(22, 22, 30),
    Primary = Color3.fromRGB(75, 110, 255),
    Secondary = Color3.fromRGB(50, 85, 220),
    Accent = Color3.new(1,1,1),
    Text = Color3.new(1,1,1),
    Error = Color3.fromRGB(255, 70, 70),
    Shadow = Color3.fromRGB(0, 0, 0)
}

local function AddGradient(instance)
    local gradient = Instance.new("UIGradient")
    gradient.Color = ColorSequence.new{
        ColorSequenceKeypoint.new(0, THEME.Secondary),
        ColorSequenceKeypoint.new(1, THEME.Primary)
    }
    gradient.Rotation = 90
    gradient.Parent = instance
end

local function CreateRoundedFrame(parent, size, pos, color)
    local frame = Instance.new("Frame")
    frame.Size = size
    frame.Position = pos
    frame.BackgroundColor3 = color or THEME.Background
    frame.BorderSizePixel = 0
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 10)
    corner.Parent = frame

    local stroke = Instance.new("UIStroke")
    stroke.Color = THEME.Shadow
    stroke.Thickness = 1
    stroke.Transparency = 0.7
    stroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
    stroke.Parent = frame

    frame.Parent = parent
    return frame
end

local function CreateLabel(parent, text, size, pos)
    local label = Instance.new("TextLabel")
    label.Text = text
    label.Size = size
    label.Position = pos
    label.TextColor3 = THEME.Text
    label.Font = Enum.Font.Gotham
    label.TextSize = 14
    label.BackgroundTransparency = 1
    label.TextXAlignment = Enum.TextXAlignment.Left
    label.Parent = parent
    return label
end

-- âœ… INIT
local gui = Instance.new("ScreenGui")
gui.Name = "AdvancedUILib"
gui.IgnoreGuiInset = true
gui.ResetOnSpawn = false
gui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
gui.Parent = PlayerGui

local window = CreateRoundedFrame(gui, UDim2.new(0.4, 0, 0.55, 0), UDim2.new(0.3, 0, 0.25, 0), THEME.Background)
window.AnchorPoint = Vector2.new(0.5, 0.5)
window.Position = UDim2.new(0.5, 0, 0.5, 0)

-- TITLE
local title = Instance.new("TextLabel")
title.Size = UDim2.new(1, 0, 0.1, 0)
title.Position = UDim2.new(0, 0, 0, 0)
title.Text = "ðŸŒˆ Custom UI"
title.Font = Enum.Font.GothamBold
title.TextColor3 = THEME.Text
title.TextSize = 16
title.BackgroundColor3 = THEME.Primary
AddGradient(title)
title.BorderSizePixel = 0
title.Parent = window

-- TOGGLE
local toggle = Instance.new("TextButton")
toggle.Size = UDim2.new(0.8, 0, 0, 30)
toggle.Position = UDim2.new(0.1, 0, 0.15, 0)
toggle.Text = "[OFF] Feature Toggle"
toggle.TextColor3 = THEME.Text
toggle.Font = Enum.Font.Gotham
toggle.TextSize = 14
toggle.BackgroundColor3 = THEME.Secondary
AddGradient(toggle)
toggle.Parent = window

local state = false
toggle.MouseButton1Click:Connect(function()
    state = not state
    toggle.Text = state and "[ON] Feature Toggle" or "[OFF] Feature Toggle"
end)

-- DROPDOWN
local dropdown = Instance.new("TextButton")
dropdown.Size = UDim2.new(0.8, 0, 0, 30)
dropdown.Position = UDim2.new(0.1, 0, 0.3, 0)
dropdown.Text = "Choose Option â–¼"
dropdown.TextColor3 = THEME.Text
dropdown.Font = Enum.Font.Gotham
AddGradient(dropdown)
dropdown.TextSize = 14
dropdown.BackgroundColor3 = THEME.Secondary
dropdown.Parent = window

local dropdownFrame = CreateRoundedFrame(window, UDim2.new(0.8, 0, 0, 0), UDim2.new(0.1, 0, 0.37, 0), THEME.Background)
dropdownFrame.Visible = false

local options = {"Option A", "Option B", "Option C"}
for _, opt in pairs(options) do
    local optBtn = Instance.new("TextButton")
    optBtn.Size = UDim2.new(1, -10, 0, 25)
    optBtn.Position = UDim2.new(0, 5, 0, (#dropdownFrame:GetChildren() - 1) * 28)
    optBtn.Text = opt
    optBtn.BackgroundColor3 = THEME.Secondary
    optBtn.TextColor3 = THEME.Text
    optBtn.Font = Enum.Font.Gotham
    optBtn.TextSize = 14
    AddGradient(optBtn)
    optBtn.Parent = dropdownFrame
    optBtn.MouseButton1Click:Connect(function()
        dropdown.Text = opt .. " â–¼"
        dropdownFrame.Visible = false
    end)
end

local showing = false
dropdown.MouseButton1Click:Connect(function()
    showing = not showing
    dropdownFrame.Visible = showing
    dropdownFrame.Size = showing and UDim2.new(0.8, 0, 0, 90) or UDim2.new(0.8, 0, 0, 0)
end)

-- HOTKEY: RightShift to show/hide GUI
gui.Enabled = true
UserInputService.InputBegan:Connect(function(input, gpe)
    if not gpe and input.KeyCode == Enum.KeyCode.RightShift then
        gui.Enabled = not gui.Enabled
    end
end)

-- CONFIG SAVE/LOAD (using HttpService)
local configData = {
    ToggleState = state
}

local function SaveConfig()
    local json = HttpService:JSONEncode(configData)
    pcall(function()
        writefile(CONFIG_KEY..".json", json)
    end)
end

local function LoadConfig()
    pcall(function()
        if isfile(CONFIG_KEY..".json") then
            local data = HttpService:JSONDecode(readfile(CONFIG_KEY..".json"))
            state = data.ToggleState
            toggle.Text = state and "[ON] Feature Toggle" or "[OFF] Feature Toggle"
        end
    end)
end

LoadConfig()

-- Example save on toggle
toggle.MouseButton1Click:Connect(function()
    configData.ToggleState = state
    SaveConfig()
end)
